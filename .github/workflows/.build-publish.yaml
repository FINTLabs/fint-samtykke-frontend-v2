name: Build and Publish

on:
  workflow_call:
    outputs:
      image-tags:
        description: "Docker image with tag"
        value: ${{ jobs.publish.outputs.image-tags }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci --ignore-scripts
        if: steps.cache-node.outputs.cache-hit != 'true'

      - name: Build project
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          if-no-files-found: error
          path: build

  publish:
    needs: install
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci --ignore-scripts
        if: steps.cache-node.outputs.cache-hit != 'true'

      - name: Restore build and node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ inputs.org }}-${{ inputs.environment }}
          tags: |
            type=sha,prefix={{date 'YYYY.MM.DD-HH.mm'}}-,priority=9002
      - name: Build and push Docker image
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set output
        run: echo "Docker image ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
